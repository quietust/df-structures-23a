<data-definition>
    <enum-type type-name='ui_sidebar_mode'>
        <enum-item name='Default'/>
        <enum-item name='Squads'/>
        <enum-item name='DesignateMine'/>
        <enum-item name='DesignateGatherPlants'/>
        <enum-item name='DesignateRemoveDesignation'/>
        <enum-item name='DesignateDetailStone'/>
        <enum-item name='DesignateCarveFortification'/>
        <enum-item name='Stockpiles'/>
        <enum-item name='Build'/>
        <enum-item name='QueryBuilding'/>
        <enum-item name='Orders'/>
        <enum-item name='OrdersRefuse'/>
        <enum-item name='OrdersWorkshop'/>
        <enum-item name='BuildingItems'/>
        <enum-item name='ViewUnits'/>
        <enum-item name='LookAround'/>
        <enum-item name='DesignateReclaim'/>
        <enum-item name='DesignateChopTrees'/>
        <enum-item name='DesignateToggleEngravings'/>
    </enum-type>

    <struct-type type-name='ui'>
        <int32_t name='gameover_type'/>
        <int32_t name='gameover_sieger' ref-target='historical_entity'/>
        <compound name='tax_collection'>
            <int16_t name='state'/>
            <int32_t/>
            <stl-vector name='rooms'>
                <pointer type-name='building'/>
            </stl-vector>
            <int32_t/>
            <int32_t comment='probably for tax collector'/>
            <int32_t comment='probably for guard1'/>
            <int32_t comment='probably for guard2'/>
            <int16_t name='collected'/>
            <int16_t name='quota'/>
            <int32_t name='tc_x'/>
            <int32_t name='tc_y'/>
            <int32_t name='tc_z'/>
            <int32_t name='guard1_x'/>
            <int32_t name='guard2_x'/>
            <int32_t name='guard1_y'/>
            <int32_t name='guard2_y'/>
            <int32_t name='guard1_z'/>
            <int32_t name='guard2_z'/>
            <pointer type-name='unit' name='collector'/>
            <pointer type-name='unit' name='guard1'/>
            <pointer type-name='unit' name='guard2'/>
            <int8_t/>
        </compound>
        <stl-vector name='caravans'>
            <pointer type-name='caravan_state'/>
        </stl-vector>
        <int8_t name='firstCaravan' comment='display special screens on arrival/departure of first caravan'/>
        <compound type-name='coord32_path' name='dwarfArrivalTiles'/>
        <compound type-name='coord32_path' name='roadInfo'/>
        <int16_t name='progress_population'/>
        <int16_t name='progress_trade'/>
        <int16_t name='progress_production'/>
        <bool name='king_arrived'/>
        <bool name='king_hasty'/>
        <bool name='anvil_arrived'/>
        <bool name='economy_active'/>
        <bool name='ignore_labor_shortage'/>
        <bool name='justice_active'/>
        <int16_t name='manager_timer'/>
        <compound name='incoming_king'>
            <int32_t name='desired_architecture'/>
            <int32_t name='desired_roads'/>
            <int32_t name='desired_offerings'/>
        </compound>
        <static-array name='nobles_enabled' type-name='int16_t' count='88' index-enum='profession'/>
        <static-array name='nobles_arrived' type-name='int16_t' count='88' index-enum='profession'/>
        <static-array name='units_killed' type-name='int16_t' count='88' index-enum='profession'/>
        <static-array name='guild_wages' type-name='int32_t' count='16' index-enum='guild_id'/>
        <static-array name='guild_happiness' type-name='int16_t' count='16' index-enum='guild_id'/>
        <static-array name='labor_slowdown_timer' type-name='int16_t' count='16' index-enum='guild_id'/>
        <static-array name='currency_value' type-name='int32_t' count='64' index-enum='material_type'/>
        <int32_t name='trees_removed' comment='used by elves'/>
        <int32_t name='adamantine_seasons' comment='increases quantity in adamantine goods mandates'/>
        <int32_t name='adamantine_mined' comment='triggers Too Deep'/>
        <int32_t name='fortress_age' comment='increments every 10 frames'/>

        <compound type-name='entity_activity_statistics' name='tasks'/>

        <stl-vector type-name='int32_t' ref-target='unit' comment='related to meetings'/>
        <stl-vector name='activities' pointer-type='activity_info'/>
        <stl-vector name='dip_meeting_info' pointer-type='meeting_diplomat_info'/>
        <stl-vector name='royal_guards' type-name='int32_t' ref-target='unit'/>
        <stl-vector name='fortress_guards' type-name='int32_t' ref-target='unit'/>
        <stl-vector name='aid_requesters' type-name='int32_t' ref-target='unit'/>
        <int8_t name='game_over'/>

        <compound name='siege'>
            <int32_t name='attacker' ref-target='historical_entity'/>
            <int32_t name='active_size1'/>
            <int32_t name='active_size2'/>
            <int32_t name='size'/>
            <int32_t name='timeout'/>
            <bitfield base-type='uint16_t' name='flags'>
                <flag-bit name='active'/>
                <flag-bit name='siege'/>
                <flag-bit name='history'/>
            </bitfield>
        </compound>

        <stl-vector name='crimes' pointer-type='crime_info'/>
        <stl-vector name='punishments' pointer-type='punishment_info'/>
        <stl-vector name='pet_info' pointer-type='pet_info'/>
        <stl-vector name='parties' pointer-type='party_info'/>
        <stl-vector name='room_rent' pointer-type='room_rent_info'/>
        <stl-vector name='dipscripts' pointer-type='dipscript_info'/>
        <stl-vector name='dipscript_popups' pointer-type='dipscript_popup'/>

        <compound name='kitchen'>
            <stl-vector name='item_types'>
                <enum base-type='int32_t' type-name='item_type'/>
            </stl-vector>
            <stl-vector name='item_subtypes'>
                <int32_t refers-to='(item-subtype-target $$._parent._parent.item_type[$$._key] $)'/>
            </stl-vector>
            <stl-vector name='materials' comment='for certain item types, these are creature/plant IDs'>
                <enum base-type='int32_t' type-name='material_type'/>
            </stl-vector>
            <stl-vector name='matglosses'>
                <int32_t refers-to='(matgloss-target $$._parent._parent.material[$$._key] $)'/>
            </stl-vector>
            <stl-vector name='exc_types' type-name='int8_t'/>
        </compound>
        <int32_t name='flags' comment='1 = first year of fortress, 2 = recalculate wagon/migrant entry points, 4 = clear all aid request timeouts'/>
        <int16_t name='aid_requester_limit' comment='10 + num injured / 7, minimum 10 (when less than 30 injured), maximum 100'/>
        <int16_t name='max_dig_depth'/>
        <int16_t name='min_dig_depth'/>
        <int16_t name='mood_cooldown'/>
        <compound name='main'>
            <enum base-type='int16_t' name='mode' type-name='ui_sidebar_mode'/>
            <int16_t name='unk1' comment='set to 0 when finding nearest building to query, never modified'/>
        </compound>
        <bool name='baron_needed'/>
        <bool name='count_needed'/>
        <bool name='duke_needed'/>

        <int32_t name='civ_id' ref-target='historical_entity'/>
        <int32_t name='group_id' ref-target='historical_entity'/>
        <int16_t name='race_id' ref-target='creature_raw'/>

        <stl-vector name='farm_crops' type-name='int16_t' ref-target='matgloss_plant'/>
        <stl-vector name='farm_seasons' type-name='int8_t'/>

        <static-array name='feature_attack_counts' type-name='int16_t' count='3' comment='maxes at 10, increases feature attack group sizes'/>
        <static-array name='feature_initial_flood' type-name='int8_t' count='3' comment='1 if you triggered a flood upon discovering the river or magma flow'/>

        <compound name='economy_prices'>
            <compound name='price_adjustment'>
                <stl-vector type-name='int32_t' name='general_items' index-enum='item_type'/>
                <stl-vector type-name='int32_t' name='weapons' index-refers-to='$global.world.raws.itemdefs.weapons[$]'/>
                <stl-vector type-name='int32_t' name='armor' index-refers-to='$global.world.raws.itemdefs.armor[$]'/>
                <stl-vector type-name='int32_t' name='handwear' index-refers-to='$global.world.raws.itemdefs.helms[$]'/>
                <stl-vector type-name='int32_t' name='footwear' index-refers-to='$global.world.raws.itemdefs.shoes[$]'/>
                <stl-vector type-name='int32_t' name='headgear' index-refers-to='$global.world.raws.itemdefs.gloves[$]'/>
                <stl-vector type-name='int32_t' name='legwear' index-refers-to='$global.world.raws.itemdefs.pants[$]'/>
                <stl-vector type-name='int32_t' name='prepared_food' index-refers-to='$global.world.raws.itemdefs.food[$]'/>
                <stl-vector type-name='int32_t' name='potions'/>
                <stl-vector type-name='int32_t' name='materials' index-enum='material_type'/>
                <stl-vector type-name='int32_t' name='wood' index-refers-to='$global.world.raws.matgloss_wood[$]'/>
                <stl-vector type-name='int32_t' name='cloth' index-refers-to='$global.world.raws.matgloss_plant[$]'/>
                <stl-vector type-name='int32_t' name='bone' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='ivory' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='horn' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='pearl' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='shell' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='leather' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='silk' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='gems' index-refers-to='$global.world.raws.matgloss_gem[$]'/>
                <stl-vector type-name='int32_t' name='stone' index-refers-to='$global.world.raws.matgloss_stone[$]'/>
                <stl-vector type-name='int32_t' name='meat_fish' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='plants' index-refers-to='$global.world.raws.matgloss_plant[$]'/>
                <stl-vector type-name='int32_t' name='drinks' index-refers-to='$global.world.raws.matgloss_plant[$]'/>
                <stl-vector type-name='int32_t' name='extract_animal' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='extract_plant' index-refers-to='$global.world.raws.matgloss_plant[$]'/>
                <stl-vector type-name='int32_t' name='mill_animal' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='mill_plant' index-refers-to='$global.world.raws.matgloss_plant[$]'/>
                <stl-vector type-name='int32_t' name='cheese_animal' index-refers-to='$global.world.raws.creatures[$]'/>
                <stl-vector type-name='int32_t' name='cheese_plant' index-refers-to='$global.world.raws.matgloss_plant[$]'/>
                <stl-vector type-name='int32_t' name='pets' index-refers-to='$global.world.raws.creatures[$]'/>
            </compound>
            <compound name='price_setter'>
                <stl-vector name='general_items' index-enum='item_type'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='weapons' index-refers-to='$global.world.raws.itemdefs.weapons[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='armor' index-refers-to='$global.world.raws.itemdefs.armor[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='handwear' index-refers-to='$global.world.raws.itemdefs.helms[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='footwear' index-refers-to='$global.world.raws.itemdefs.shoes[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='headgear' index-refers-to='$global.world.raws.itemdefs.gloves[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='legwear' index-refers-to='$global.world.raws.itemdefs.pants[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='prepared_food' index-refers-to='$global.world.raws.itemdefs.food[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='potions'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='materials' index-enum='material_type'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='wood' index-refers-to='$global.world.raws.matgloss_wood[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='cloth' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='bone' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='ivory' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='horn' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='pearl' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='shell' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='leather' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='silk' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='gems' index-refers-to='$global.world.raws.matgloss_gem[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='stone' index-refers-to='$global.world.raws.matgloss_stone[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='meat_fish' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='plants' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='drinks' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='extract_animal' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='extract_plant' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='mill_animal' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='mill_plant' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='cheese_animal' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='cheese_plant' index-refers-to='$global.world.raws.matgloss_plant[$]'><pointer type-name='unit'/></stl-vector>
                <stl-vector name='pets' index-refers-to='$global.world.raws.creatures[$]'><pointer type-name='unit'/></stl-vector>
            </compound>
        </compound>

        <compound name='stockpile'>
            <int32_t name='reserved_bins'/>
            <int32_t name='reserved_barrels'/>

            <compound name='custom_settings' type-name='stockpile_settings'/>
        </compound>
    </struct-type>

    <enum-type type-name='timed_event_type' base-type='int16_t'>
        <enum-item name='Caravan'/>
        <enum-item name='Migrants'/>
        <enum-item name='Diplomat'/>
        <enum-item name='CivAttack'/>
        <enum-item name='RiverAttack'/>
        <enum-item name='ChasmAttack'/>
        <enum-item name='MagmaAttack'/>
        <enum-item name='TooDeep'/>
        <enum-item name='Megabeast'/>
        <enum-item name='CuriousBeasts'/>
    </enum-type>


    <struct-type type-name='timed_event'>
        <enum type-name='timed_event_type' name='type'/>
        <int8_t name='season'/>
        <int16_t name='season_ticks' comment='1 tick = 10 frames; 0 = end of season'/>
        <pointer name='entity' type-name='historical_entity'/>
    </struct-type>

</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
