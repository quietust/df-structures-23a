<data-definition>
    <bitfield-type type-name='job_material_category' base-type='uint32_t'>
        <flag-bit name='plant'/>
        <flag-bit name='wood'/>
        <flag-bit name='cloth'/>
        <flag-bit name='silk'/>
        <flag-bit name='leather'/>
        <flag-bit name='bone'/>
        <flag-bit name='shell'/>
        <flag-bit name='wood2'/>
        <flag-bit name='soap'/>
        <flag-bit name='tooth'/>
        <flag-bit name='horn'/>
        <flag-bit name='pearl'/>
        <flag-bit name='yarn'/>
    </bitfield-type>

    <bitfield-type type-name='dfhack_material_category' base-type='uint32_t'>
        <comment>
            An extended version of job_material_category,
            for use in some plugins, like workflow.
        </comment>
        <!-- The start must be identical to job_material_category -->
        <flag-bit name='plant'/>
        <flag-bit name='wood'/>
        <flag-bit name='cloth'/>
        <flag-bit name='silk'/>
        <flag-bit name='leather'/>
        <flag-bit name='bone'/>
        <flag-bit name='shell'/>
        <flag-bit name='wood2'/>
        <flag-bit name='soap'/>
        <flag-bit name='tooth'/>
        <flag-bit name='horn'/>
        <flag-bit name='pearl'/>
    </bitfield-type>

    <bitfield-type type-name='job_item_category' base-type='uint32_t'>
        <flag-bit name='unk1'/>
        <flag-bit name='unk2'/>
        <flag-bit name='furniture'/>
        <flag-bit name='unk8'/>
        <flag-bit name='unk16'/>
        <flag-bit name='unk32'/>
        <flag-bit name='ammo'/>
        <flag-bit name='unk128'/>
        <flag-bit name='unk256'/>
        <flag-bit name='unk512'/>
        <flag-bit name='finished_goods'/>
    </bitfield-type>

    <struct-type type-name='job_list_link'>
        <code-helper name='describe'>(describe-obj $.item)</code-helper>
        <pointer name='item' type-name='job'/>
        <pointer name='prev' type-name='job_list_link'/>
        <pointer name='next' type-name='job_list_link'/>
    </struct-type>

    <bitfield-type type-name='job_flags' base-type='uint32_t'>
        <flag-bit name='repeat'/>
        <flag-bit name='suspend'/>
        <flag-bit name='working' comment='not for food, or store in sp'/>
        <flag-bit name='fetching'
                  comment='Actually going out to bring; corresponds to items->is_fetching'/>
        <flag-bit name='special'
                  comment='Sleep/Drink/Eat/Clean; cannot be aborted via the ui'/>
        <flag-bit name='bringing'>
            <comment>
                When actually carrying non-last item to the workshop.
                If last, 'working' is used instead.
            </comment>
        </flag-bit>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit name='by_manager'/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
    </bitfield-type>

    <struct-type type-name='job' key-field='id'>
        <int32_t name='id'/>
        <pointer name='list_link' type-name='job_list_link'/>
        <enum name='job_type' base-type='int16_t' type-name='job_type'/>
        <int32_t name='unk2'/>

        <code-helper name='describe'>$.job_type</code-helper>

        <compound name='pos' type-name='coord'/>

        <int32_t name='completion_timer' comment='-1 per 10 frames'/>

        <uint16_t name='unk4a'/>
        <uint16_t name='unk4b'/>

        <compound name='flags' type-name='job_flags'/>

        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <int16_t name='unk5'/>
        <int16_t name='unk6'/>
        <int16_t name='item_subtype'/>

        <compound name="item_category" type-name='job_item_category'/>
        <int32_t name="hist_figure_id" ref-target='historical_figure'/>
        <compound name='material_category' type-name='job_material_category'/>

        <int32_t name='unk9'/>
        <int32_t name='unk10'/>

        <stl-vector name='items'>
            <pointer type-name='job_item_ref'/>
        </stl-vector>

        <stl-vector name='misc_links'>
            <pointer>
                <int32_t name='id'/>
                <pointer name='ptr'/>
            </pointer>
        </stl-vector>

        <stl-vector name='references'>
            <pointer type-name='general_ref'/>
        </stl-vector>

        <stl-vector name='job_items'>
            <pointer type-name='job_item'/>
        </stl-vector>
    </struct-type>

    <struct-type type-name='job_item_ref'>
        <pointer name='item' type-name='item'/>

        <enum base-type='int32_t' name='role'>
            <enum-item/>
            <enum-item name='Reagent'/>
            <enum-item name='Hauled'/>
            <enum-item/>
            <enum-item/>
            <enum-item/>
            <enum-item name='TargetContainer'/>
        </enum>
        <int32_t name='is_fetching'
                 comment='0 immediately once taken to be brought'/>
        <int32_t name='job_item_idx'/>
    </struct-type>

    <bitfield-type type-name='job_item_flags1' base-type='uint32_t'>
        <flag-bit name='improvable' comment='vtable[155]:eax,-1,-1'/>
        <flag-bit name="butcherable" comment='(call 0074c6d0)'/>
        <flag-bit name="millable" comment='vtable[79]'/>
        <flag-bit name="buryable" comment='check for item flag "dead_dwarf"'/>
        <flag-bit name="unrotten" comment='check for item flag "rotten"'/>
        <flag-bit name="undisturbed" comment='check for item flag "spider_web"'/>
        <flag-bit name="collected" comment='check for item flag "spider_web"'/>
        <flag-bit name="sharpenable" comment='vtable[25]'/>

        <flag-bit name="murdered" comment='check for item flag'/>
        <flag-bit name="distillable" comment='vtable[105],1'/>
        <flag-bit name="empty" comment='(call 00753a40)'/>
        <flag-bit name="processable" comment='vtable[80]'/>
        <flag-bit name="bag" comment='vtable[131]'/>
        <flag-bit name="cookable" comment='(call 00753fe0)'/>
        <flag-bit name="extract_bearing_plant" comment='vtable[164]'/>
        <flag-bit name="extract_bearing_fish" comment='vtable[181]'/>

        <flag-bit name="extract_bearing_vermin" comment='vtable[182]'/>
        <flag-bit name="processable_to_vial" comment='vtable[81]'/>
        <flag-bit name="processable_to_bag" comment='vtable[82]'/>
        <flag-bit name="processable_to_barrel" comment='vtable[83]'/>
        <flag-bit name="solid" comment='vtable[74]'/>
        <flag-bit name="tameable_vermin" comment='vtable[104]'/>
        <flag-bit name="nearby"/>
        <flag-bit name="sand_bearing" comment='vtable[108]'/>

        <flag-bit name="glass" comment='check for material flag IS_GLASS'/>
        <flag-bit name="milk" comment='(call 00753d30 - check if material has CHEESE_MAT?)'/>
        <flag-bit name="milkable" comment='vtable[107],1,1'/>
        <flag-bit name='finished_goods'/>
        <flag-bit name='ammo'/>
        <flag-bit name='furniture'/>
        <flag-bit name='not_bin'/>
        <flag-bit name='lye_bearing'/>
    </bitfield-type>

    <bitfield-type type-name='job_item_flags2' base-type='uint32_t'>
        <flag-bit name="dye" comment='vtable[106]'/>
        <flag-bit name="dyeable" comment='vtable[159]'/>
        <flag-bit name="dyed" comment='vtable[161]'/>
        <flag-bit name="sewn_imageless" comment='vtable[162]'/>
        <flag-bit name="glass_making" comment='vtable[26]'/>
        <flag-bit name="screw" comment='vtable[46]'/>
        <flag-bit name="building_material" comment='vtable[47]'/>
        <flag-bit name="fire_safe" comment='vtable[48],1'/>

        <flag-bit name="magma_safe" comment='vtable[48],2'/>
        <flag-bit name="deep_material" comment='check for inorganic material flag DEEP'/>
        <flag-bit name="melt_designated" comment='check for item flag "melt"'/>
        <flag-bit name="non_economic" comment='(call 0076be60)'/>
        <flag-bit name="allow_melt_dump" comment='item can be designated for melting or dumping'/>
        <flag-bit name="allow_artifact" comment='item can be artifact'/>
        <flag-bit name="plant" comment='check if material is a PLANT_MAT'/>
        <flag-bit name="silk" comment='check for material flag SILK'/>

        <flag-bit name="leather" comment='check for material flag LEATHER'/>
        <flag-bit name="bone" comment='check for material flag BONE'/>
        <flag-bit name="shell" comment='check for material flag SHELL'/>
        <flag-bit name="totemable" comment='vtable[158]'/>
        <flag-bit name="horn" comment='check for material flag HORN'/>
        <flag-bit name="pearl" comment='check for material flag PEARL'/>
    </bitfield-type>

    <struct-type type-name='job_item'>
        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <compound name='flags1' type-name='job_item_flags1'/>

        <int32_t name='quantity'/>
        <enum base-type='int16_t' name='vector_id' type-name='job_item_vector_id'/>

        <compound name='flags2' type-name='job_item_flags2'/>
        <int32_t name='unk2'/>
        <int32_t name='unk3'/>
    </struct-type>

    <struct-type type-name='job_item_filter'>
        <enum base-type='int16_t' name="item_type" type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <compound name="flags1" type-name='job_item_flags1'/>

        <pointer name="item_vector">
            <stl-vector>
                <pointer type-name='item'/>
            </stl-vector>
        </pointer>

        <compound name="flags2" type-name='job_item_flags2'/>
        <bool name="use_flags2"/>

        <int32_t name="unk2"/>
        <bool name="use_unk2"/>

        <int32_t name="unk3"/>
        <bool name="use_unk3"/>

        <compound name='pos' type-name='coord'/>

        <pointer name="unit" type-name='unit'/>
        <pointer name="job" type-name='job'/>
        <pointer name="building" type-name='building'/>

        <int32_t name="unk_74"/>
    </struct-type>

    <struct-type type-name='manager_order'>
        <enum name='job_type' base-type='int16_t' type-name='job_type'/>
        <int16_t name="item_subtype"/>

        <int32_t/>
        <int32_t/>
        <int32_t/>
        <int32_t/>

        <int16_t name='material' comment='or matgloss, depends on context'/>

        <int16_t name="amount_left"/>
        <int16_t name="amount_total"/>
    </struct-type>

    <struct-type type-name='manager_order_template'>
        <enum name='job_type' base-type='int16_t' type-name='job_type'/>
        <stl-string name="reaction_name"/>
        <int16_t init-value='-1'/>
        <int16_t name="item_subtype"/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <compound name="item_category" type-name='job_item_category'/>
        <int32_t init-value='-1'/>
        <compound name="material_category" type-name='job_material_category'/>
        <int8_t init-value='1'/>
    </struct-type>

    <struct-type type-name='mandate'>
        <pointer name='unit' type-name='unit'/>

        <int16_t name='mode' comment='0 export, 1 make, 2 guild jobs'/>

        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>

        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <int16_t name='amount_total'/>
        <int16_t name='amount_remaining'/>

        <int32_t name='timeout_counter' comment='counts once per 10 frames'/>
        <int32_t name='timeout_limit' comment='once counter passes limit, mandate ends'/>

        <int32_t name='unk2'/>
        <uint8_t name='unk3'/>
        <int32_t name='unk4'/>
    </struct-type>

    <struct-type type-name='unit_demand'>
        <int16_t name="unk_0"/>

        <enum base-type='int16_t' name='place'>
            <enum-item name='Office'/>
            <enum-item name='Bedroom'/>
            <enum-item name='DiningRoom'/>
            <enum-item name='Tomb'/>
        </enum>

        <enum base-type='int16_t' name='item_type' type-name='item_type'/>
        <int16_t name='item_subtype' refers-to='(item-subtype-target $$._parent.item_type $)'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>

        <int32_t name='timeout_counter' comment='counts once per 10 frames'/>
        <int32_t name='timeout_limit' comment='once counter passes limit, mandate ends'/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
