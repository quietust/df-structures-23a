<data-definition>
    <struct-type type-name='coord2d' custom-methods='true'>
        <int32_t name='x' init-value='-30000'/>
        <int32_t name='y' init-value='-30000'/>

        <code-helper name='describe'>(fmt "(~A,~A)" $.x $.y)</code-helper>
    </struct-type>

    <struct-type type-name='coord2d_path' custom-methods='true'>
        <stl-vector type-name='int32_t' name='x'/>
        <stl-vector type-name='int32_t' name='y'/>

        <code-helper name='describe'>
            (fmt "[~A]" $.x.count)
            (loop for i from 0 below (min $.x.count 3)
              collect (fmt "(~A,~A)" $.x[i] $.y[i]))
            (when (> $.x.count 3) "...")
        </code-helper>
    </struct-type>

    <struct-type type-name='coord2d16' custom-methods='true'>
        <int16_t name='x' init-value='-30000'/>
        <int16_t name='y' init-value='-30000'/>

        <code-helper name='describe'>(fmt "(~A,~A)" $.x $.y)</code-helper>
    </struct-type>

    <struct-type type-name='coord2d16_path' custom-methods='true'>
        <stl-vector type-name='int16_t' name='x'/>
        <stl-vector type-name='int16_t' name='y'/>

        <code-helper name='describe'>
            (fmt "[~A]" $.x.count)
            (loop for i from 0 below (min $.x.count 3)
              collect (fmt "(~A,~A)" $.x[i] $.y[i]))
            (when (> $.x.count 3) "...")
        </code-helper>
    </struct-type>

    <struct-type type-name='coord' custom-methods='true'>
        <int32_t name='x' init-value='-30000'/>
        <int32_t name='y' init-value='-30000'/>
        <int32_t name='z' init-value='-30000'/>

        <code-helper name='describe'>(fmt "(~A,~A,~A)" $.x $.y $.z)</code-helper>
    </struct-type>

    <struct-type type-name='coord_path' custom-methods='true'>
        <stl-vector type-name='int32_t' name='x'/>
        <stl-vector type-name='int32_t' name='y'/>
        <stl-vector type-name='int32_t' name='z'/>

        <code-helper name='describe'>
            (fmt "[~A]" $.x.count)
            (loop for i from 0 below (min $.x.count 3)
              collect (fmt "(~A,~A,~A)" $.x[i] $.y[i] $.z[i]))
            (when (> $.x.count 3) "...")
        </code-helper>
    </struct-type>

    <struct-type type-name='coord16' custom-methods='true'>
        <int16_t name='x' init-value='-30000'/>
        <int16_t name='y' init-value='-30000'/>
        <int16_t name='z' init-value='-30000'/>

        <code-helper name='describe'>(fmt "(~A,~A,~A)" $.x $.y $.z)</code-helper>
    </struct-type>

    <struct-type type-name='coord16_path' custom-methods='true'>
        <stl-vector type-name='int16_t' name='x'/>
        <stl-vector type-name='int16_t' name='y'/>
        <stl-vector type-name='int16_t' name='z'/>

        <code-helper name='describe'>
            (fmt "[~A]" $.x.count)
            (loop for i from 0 below (min $.x.count 3)
              collect (fmt "(~A,~A,~A)" $.x[i] $.y[i] $.z[i]))
            (when (> $.x.count 3) "...")
        </code-helper>
    </struct-type>

    <struct-type type-name='mineral_cluster'>
        <int16_t name='x1'/>
        <int16_t name='x2'/>
        <int16_t name='y1'/>
        <int16_t name='y2'/>
        <int16_t name='z'/>
        <int16_t name='color'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
    </struct-type>

    <bitfield-type type-name='tile_color' base-type='uint8_t'>
        <flag-bit name='color' count='4'/>
        <flag-bit name='mud'/>
        <flag-bit name='rain'/>
        <flag-bit name='snow'/>
        <flag-bit name='dry'/>
    </bitfield-type>

    <bitfield-type type-name='tile_designation' base-type='uint32_t'>
        <flag-bit name='pile'/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit name='smooth'/>
        <flag-bit name='dig'/>

        <flag-bit name='fortification'/>
        <flag-bit name='hidden'/>
        <flag-bit/>
        <flag-bit/>
        <flag-bit name='stone_type' count='4'/>

        <flag-bit/>
        <flag-bit/>
        <flag-bit/>
    </bitfield-type>

    <bitfield-type type-name='tile_occupancy'>
        <flag-bit name='unit' comment='standing'/>
        <flag-bit name='unit_grounded' comment='prone'/>
        <flag-bit name='item'/>
        <flag-bit name='building' count='2'/>
        <flag-bit name='moss'/>
        <flag-bit name='water'/>
        <flag-bit name='vomit'/>

        <flag-bit name='arrow_color' count='4'/>
        <flag-bit name='blood_g' count='2'/>
        <flag-bit name='blood_b' count='2'/>

        <flag-bit name='pus' count='2'/>
        <flag-bit name='blood_m' count='2'/>
        <flag-bit name='blood_c' count='2'/>
        <flag-bit name='ichor' count='2'/>

        <flag-bit name='goo' count='2'/>
        <flag-bit name='slime' count='2'/>
        <flag-bit name='blood' count='2'/>
        <flag-bit name='arrow_variant'/>
        <flag-bit name='lava'/>
    </bitfield-type>

    <enum-type type-name='block_flags'>
        <enum-item name='designated' comment='for jobs etc'/>
    </enum-type>

    <struct-type type-name='map_block'>
        <df-flagarray name='flags' index-enum='block_flags'/>

        <stl-vector name='items'>
            <int32_t ref-target='item'/>
        </stl-vector>

        <stl-vector name='flows'>
            <pointer type-name='flow'/>
        </stl-vector>

        <int32_t/>
        <int32_t/>

        <static-array name='color' count='16'>
            <static-array count='16'>
                <compound type-name='tile_color'/>
            </static-array>
        </static-array>
        <static-array name='designation' count='16'>
            <static-array count='16'>
                <compound type-name='tile_designation'/>
            </static-array>
        </static-array>
        <static-array name='tiletype' count='16'>
            <static-array count='16'>
                <enum base-type='int8_t' type-name='tiletype'/>
            </static-array>
        </static-array>

        <static-array name='occupancy' count='16'>
            <static-array count='16'>
                <compound type-name='tile_occupancy'/>
            </static-array>
        </static-array>
        <static-array count='16'>
            <static-array count='16'>
                <int8_t/>
            </static-array>
        </static-array>
        <static-array count='16' comment='temporary'>
            <static-array count='16'>
                <uint32_t/>
            </static-array>
        </static-array>
        <static-array name='passable' count='16' comment='temporary'>
            <static-array count='16'>
                <uint16_t/>
            </static-array>
        </static-array>
        <static-array count='16'>
            <static-array count='16'>
                <uint16_t/>
            </static-array>
        </static-array>

        <static-array name='temperature_1' count='16'>
            <static-array count='16'>
                <uint16_t/>
            </static-array>
        </static-array>
        <static-array name='temperature_2' count='16'>
            <static-array count='16'>
                <uint16_t/>
            </static-array>
        </static-array>

        <static-array count='16'>
            <static-array count='16'>
                <uint16_t/>
            </static-array>
        </static-array>

        <compound name='pos' type-name='coord16'/>
    </struct-type>

    <enum-type type-name='biome_type'>
        <enum-item name='MOUNTAIN'/>
        <enum-item name='GLACIER'/>
        <enum-item name='TUNDRA'/>
        <enum-item name='SWAMP_TEMPERATE_FRESHWATER'/>
        <enum-item name='SWAMP_TEMPERATE_SALTWATER'/>
        <enum-item name='MARSH_TEMPERATE_FRESHWATER'/>
        <enum-item name='MARSH_TEMPERATE_SALTWATER'/>
        <enum-item name='SWAMP_TROPICAL_FRESHWATER'/>
        <enum-item name='SWAMP_TROPICAL_SALTWATER'/>
        <enum-item name='SWAMP_MANGROVE'/>
        <enum-item name='MARSH_TROPICAL_FRESHWATER'/>
        <enum-item name='MARSH_TROPICAL_SALTWATER'/>
        <enum-item name='FOREST_TAIGA'/>
        <enum-item name='FOREST_TEMPERATE_CONIFER'/>
        <enum-item name='FOREST_TEMPERATE_BROADLEAF'/>
        <enum-item name='FOREST_TROPICAL_CONIFER'/>
        <enum-item name='FOREST_TROPICAL_DRY_BROADLEAF'/>
        <enum-item name='FOREST_TROPICAL_MOIST_BROADLEAF'/>
        <enum-item name='GRASSLAND_TEMPERATE'/>
        <enum-item name='SAVANNA_TEMPERATE'/>
        <enum-item name='SHRUBLAND_TEMPERATE'/>
        <enum-item name='GRASSLAND_TROPICAL'/>
        <enum-item name='SAVANNA_TROPICAL'/>
        <enum-item name='SHRUBLAND_TROPICAL'/>
        <enum-item name='DESERT_BADLAND'/>
        <enum-item name='DESERT_ROCK'/>
        <enum-item name='DESERT_SAND'/>
        <enum-item name='OCEAN'/>
        <enum-item name='INLAND_FRESHWATER'/>
        <enum-item name='INLAND_BRACKISHWATER'/>
        <enum-item name='INLAND_SALTWATER'/>
        <enum-item name='SUBTERRANEAN_RIVER'/>
        <enum-item name='SUBTERRANEAN_CHASM'/>
        <enum-item name='SUBTERRANEAN_LAVA'/>
    </enum-type>

    <enum-type type-name='flow_type' base-type='int16_t'>
        <enum-item name='Miasma'/>
        <enum-item name='Steam' comment='only if material=1'/>
        <enum-item name='Mist'/>
        <enum-item name='BloodyMist'/>
        <enum-item name='Dust'/>
        <enum-item name='WaterFlood'/>
        <enum-item comment='Water Antiflood?'/>
        <enum-item comment='Magma Antiflood?'/>
        <enum-item name='MagmaFlood'/>
        <enum-item name='MagmaMist'/>
        <enum-item name='Smoke'/>
        <enum-item name='Dragonfire'/>
        <enum-item name='Fire'/>
        <enum-item name='Web'/>
        <enum-item name='MaterialGas'/>
    </enum-type>

    <struct-type type-name='flow'>
        <enum type-name='flow_type' base-type='int16_t' name='type'/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <int16_t name='density'/>
        <int16_t name='x'/>
        <int16_t name='y'/>
        <int16_t name='z'/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int32_t/>
    </struct-type>

    <struct-type type-name='flood_info'>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <int16_t/>
        <static-array type-name='int8_t' count='10'/>
        <int8_t/>
        <int8_t/>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
