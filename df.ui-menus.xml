<data-definition>
    -- BUILDING COMPONENT ITEM SELECTION

    <struct-type type-name='ui_build_item_req'>
        <comment>
            When creating a building, one record per required item type.
            E.g. Soap Maker's workshop requires a bucket and a building material.
        </comment>

        <stl-vector name='candidates'>
            <pointer type-name='item'/>
        </stl-vector>
        <stl-vector name='candidate_selected' type-name='bool'/>
        <stl-vector name='unk_a0' type-name='int16_t'/>
        <stl-vector name='candidate_enabled' type-name='bool'/>

        <int32_t name="count_required"/>
        <int16_t name="count_provided"/>
    </struct-type>

    <struct-type type-name='ui_build_selector'>
        <stl-vector name='requirements'>
            <pointer type-name='ui_build_item_req'/>
        </stl-vector>

        <int32_t name="building_type" comment='if -1, in Build menu; otherwise select item'/>
        <int16_t name="building_subtype"/>

        <int32_t name="stage" comment='0 no materials, 1 place, 2 select item'/>

        <int16_t name="req_index"/>
        <int16_t name="sel_index"/>

        <int32_t name="is_grouped"/>

        <stl-vector name='unk3'>
            <pointer type-name='stl-string'/>
        </stl-vector>
        <stl-vector name='unk4'>
            <pointer type-name='stl-string'/>
        </stl-vector>

        <static-array name='tiles' count='31'>
            <static-array type-name='int32_t' count='31'/>
        </static-array>

        <int16_t name='unk5_0a'/>
        <int16_t name='unk5_0b'/>

        <int32_t name='unk5_1'/>
        <int32_t name='unk5_2'/>
        <int8_t name='unk5_3a'/>
        <int8_t name='unk5_3b'/>
        <int8_t name='unk5_3c'/>
        <int8_t name='unk5_3d'/>
        <int32_t name='unk5_4'/>
        <stl-vector name='unk6'/>
        <stl-vector name='unk7'/>
        dtor: 0x85272c0
    </struct-type>

    -- MISC. SIDEBAR MENUS

    <class-type type-name='interface_button' original-name='interface_buttonst'>
        <int32_t name="hotkey_id"/>
        <bool name="is_hidden"/>

        <virtual-methods>
            <vmethod name='getLabel'>
                <pointer type-name='stl-string' name='str'/>
            </vmethod>
            <vmethod name='click'/>
            <vmethod name='setColor'>
                <bool name='selected'/>
            </vmethod>
            <vmethod/>
            <vmethod is-destructor='true'/>
        </virtual-methods>
    </class-type>

    <class-type type-name='interface_button_buildingst'
                inherits-from='interface_button'>
        <pointer name='building' type-name='building'/>
    </class-type>

    <class-type type-name='interface_button_building_category_selectorst'
                inherits-from='interface_button_buildingst'>
        <int32_t name="category_id"/>
        <int8_t name="unk_14"/>
    </class-type>

    <class-type type-name='interface_button_building_material_selectorst'
                inherits-from='interface_button_buildingst'>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <int8_t name="unk_1c"/>
    </class-type>

    <class-type type-name='interface_button_building_new_jobst'
                inherits-from='interface_button_buildingst'>
        <enum name="job_type" base-type='int32_t' type-name='job_type'/>
        <stl-string name="reaction_name"/>
        <int16_t name="unused_30"/>
        <int16_t name="item_subtype"/>
        <enum base-type='int16_t' name='material' type-name='material_type'/>
        <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        <compound name="item_category" type-name='item_category'/>
        <int32_t name="hist_figure_id" ref-target='historical_figure'/>
        <bool name="unk_48"/>
    </class-type>

    <class-type type-name='interface_button_constructionst'
                inherits-from='interface_button'>
        <pointer name='unused_c'/>
    </class-type>

    <class-type type-name='interface_button_construction_donest'
                inherits-from='interface_button_constructionst'/>

    <class-type type-name='interface_button_construction_category_selectorst'
                inherits-from='interface_button_constructionst'>
        <int32_t name="category_id"/>
    </class-type>

    <class-type type-name='interface_button_construction_building_selectorst'
                inherits-from='interface_button_constructionst'>
        <int16_t name="building_type"/>
        <int16_t name="building_subtype"/>

        <int32_t name="existing_count"/>
    </class-type>

    <class-type type-name='interface_button_buttonst'
                inherits-from='interface_button'>
        <bool/>
    </class-type>

    <class-type type-name='interface_button_button_designate_selectst'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_donest'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_open_bitem_designationst'
                inherits-from='interface_button_buttonst'/>

    <class-type type-name='interface_button_button_open_traffic_designationst'
                inherits-from='interface_button_buttonst'/>

    <struct-type type-name='ui_sidebar_menus'>
        <compound name='workshop_job'>
            <stl-vector name='choices_all'>
                <pointer type-name='interface_button_buildingst'/>
            </stl-vector>
            <stl-vector name='choices_visible'>
                <pointer type-name='interface_button_buildingst'/>
            </stl-vector>

            <int32_t name="cursor"/>
            <int32_t name="category_id" comment='weapons, armor, etc'/>

            <enum base-type='int16_t' name='material' type-name='material_type'/>
            <int16_t name='matgloss' refers-to='(matgloss-target $$._parent.material $)'/>
        </compound>

        <compound name='building'>
            <stl-vector name='choices_all'>
                <pointer type-name='interface_button_constructionst'/>
            </stl-vector>
            <stl-vector name='choices_visible'>
                <pointer type-name='interface_button_constructionst'/>
            </stl-vector>

            <int32_t name="category_id"/>
            <int32_t name="cursor"/>
        </compound>

        <stl-vector type-name='pointer'/>

        <int32_t/>
        <int32_t/>

        <compound name='unit'>
            <stl-vector name='inv_items'>
                <pointer type-name='unit_inventory_item'/>
            </stl-vector>

            <int8_t/>
            <int8_t/>
            <static-array type-name='int32_t' count='529'/>
            <int8_t/>
            <int8_t/>
        </compound>

        <stl-string/>
        <stl-vector>
            <pointer type-name='stl-string'/>
        </stl-vector>

        <int32_t/>
        <int32_t/>
    </struct-type>

    <struct-type type-name='ui_look_list'>
        <stl-vector name='items'>
            <pointer>
                <enum base-type='int16_t' name='type'>
                    <enum-item name='Item'/>
                    <enum-item name='Floor'/>
                    <enum-item name='Unit'/>
                    <enum-item name='Building'/>
                    <enum-item name='Vermin'/>
                </enum>
                <int32_t comment='uninit'/>
                <int32_t comment='uninit'/>
                <compound is-union='true'>
                    <pointer name='item' type-name='item'/>
                    <pointer name='unit' type-name='unit'/>
                    <pointer name='building' type-name='building'/>
                    <pointer name='vermin' type-name='vermin'/>
                </compound>
            </pointer>
        </stl-vector>
    </struct-type>

    <struct-type type-name='ui_unit_view_mode'>
        <enum name='value'>
            <enum-item name='General'/>
            <enum-item name='Inventory'/>
            <enum-item name='Preferences'/>
            <enum-item name='Wounds'/>
            <enum-item name='PrefLabor'/>
            <enum-item name='PrefPet'/>
            <enum-item name='PrefSoldier'/>
        </enum>
    </struct-type>
</data-definition>

<!--
Local Variables:
indent-tabs-mode: nil
nxml-child-indent: 4
End:
-->
